-- CICD-VAR: ENV
-- CICD-VAR: IMPLEMENTATION_DB_NAME
-- CICD-VAR: ADMIN_ROLE_NAME
-- CICD-VAR: READER_ROLE_NAME
-- CICD-VAR: WAREHOUSE_NAME

DECLARE 
    object_count INT;
BEGIN
    USE ROLE {ENV}ADMIN;
    USE WAREHOUSE {WAREHOUSE_NAME};

    -- database
    SELECT COUNT(*) INTO :object_count FROM SNOWFLAKE.INFORMATION_SCHEMA.DATABASES WHERE DATABASE_NAME = '{IMPLEMENTATION_DB_NAME}';
    IF (object_count = 0) THEN
	USE ROLE ACCOUNT_OBJECT_CREATOR;
        CREATE DATABASE {IMPLEMENTATION_DB_NAME};
        GRANT OWNERSHIP ON DATABASE {IMPLEMENTATION_DB_NAME} TO ROLE {ADMIN_ROLE_NAME};
    END IF;

    -- switch role/DB
    USE ROLE {ENV}ADMIN;
    USE DATABASE {IMPLEMENTATION_DB_NAME};

    -- grant database permissions
    GRANT USAGE ON DATABASE {IMPLEMENTATION_DB_NAME} TO ROLE {READER_ROLE_NAME};

    -- schema
    SELECT COUNT(*) INTO :object_count FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'DEV_OPS';
    IF (object_count = 0) THEN
        CREATE SCHEMA DEV_OPS WITH MANAGED ACCESS;
        GRANT OWNERSHIP ON SCHEMA DEV_OPS TO ROLE {ADMIN_ROLE_NAME};
        GRANT USAGE ON SCHEMA DEV_OPS TO ROLE {READER_ROLE_NAME};
    END IF;

    -- table
    SELECT COUNT(*) INTO :object_count FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'DEV_OPS' AND TABLE_NAME = 'CHANGE_HISTORY';
    IF (object_count = 0) THEN
        CREATE TABLE DEV_OPS.CHANGE_HISTORY
        (
            CHANGE_ID             INT,
            SCRIPT_DIRECTORY      VARCHAR,
            SCRIPT_TYPE           VARCHAR,
            SCRIPT_NAME           VARCHAR,
            SCRIPT_CHECKSUM       VARCHAR,
            EXEC_VAR_VALUES       VARCHAR,
            EXEC_SQL              VARCHAR,
            EXEC_SUCCESS          BOOLEAN,
            EXEC_START_TIME_UTC   TIMESTAMP_NTZ,
            EXEC_END_TIME_UTC     TIMESTAMP_NTZ,
            EXEC_ERROR            VARCHAR
        );
        GRANT OWNERSHIP ON TABLE DEV_OPS.CHANGE_HISTORY TO ROLE {ADMIN_ROLE_NAME};
        GRANT SELECT, REFERENCES ON TABLE DEV_OPS.CHANGE_HISTORY TO ROLE {READER_ROLE_NAME};
    END IF;

    -- sequence
    SELECT COUNT(*) INTO :object_count FROM INFORMATION_SCHEMA.SEQUENCES WHERE SEQUENCE_SCHEMA = 'DEV_OPS' AND SEQUENCE_NAME = 'NEXT_CHANGE_ID';
    IF (object_count = 0) THEN
        CREATE SEQUENCE DEV_OPS.NEXT_CHANGE_ID;
        GRANT OWNERSHIP ON SEQUENCE DEV_OPS.NEXT_CHANGE_ID TO ROLE {ADMIN_ROLE_NAME};
    END IF;

END;